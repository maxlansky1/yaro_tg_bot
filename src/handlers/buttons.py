"""
–ú–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫
–°–æ–¥–µ—Ä–∂–∏—Ç —Ö—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ inline-–∫–Ω–æ–ø–∫–∞–º–∏.
"""

from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from configs.config import Config
from handlers.links import cmd_create_link, handle_channel_selected
from utils.logger import get_logger

# === –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
logger = get_logger(__name__)

# === –†–æ—É—Ç–µ—Ä ===
buttons_router = Router()


# === –•–≠–ù–î–õ–ï–†–´ –ö–ù–û–ü–û–ö ===
@buttons_router.message(F.text == "–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É")
async def handle_create_link_button(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É".
    –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏.
    –ü–µ—Ä–µ–¥–∞—ë—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ `cmd_create_link`.
    """
    try:
        if message.from_user.id in Config.TELEGRAM_ADMIN_IDS:
            await cmd_create_link(message, message.bot, state)
        else:
            await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É: {e}", exc_info=True)
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏")


@buttons_router.message(F.text == "–û—Ç–∫—Ä—ã—Ç—å Google –¢–∞–±–ª–∏—Ü—É")
async def handle_open_sheet_button(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å Google –¢–∞–±–ª–∏—Ü—É".
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–∞–±–ª–∏—Ü—É —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.
    """
    try:
        if message.from_user.id not in Config.TELEGRAM_ADMIN_IDS:
            await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
            return

        sheet_url = (
            f"https://docs.google.com/spreadsheets/d/{Config.SPREADSHEET_ID}/edit"
        )
        await message.answer(
            f"üìé [–û—Ç–∫—Ä—ã—Ç—å Google –¢–∞–±–ª–∏—Ü—É]({sheet_url})", parse_mode="Markdown"
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}", exc_info=True)
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å Google –¢–∞–±–ª–∏—Ü—É")


# === CALLBACK HANDLERS ===
@buttons_router.callback_query(F.data.startswith("select_channel:"))
async def handle_select_channel_callback(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∫–∞–Ω–∞–ª–∞ —á–µ—Ä–µ–∑ inline-–∫–Ω–æ–ø–∫—É.
    –ü–µ—Ä–µ–¥–∞—ë—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ `handle_channel_selected`.
    """
    try:
        await handle_channel_selected(callback, state)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–∞–Ω–∞–ª–∞: {e}", exc_info=True)
        await callback.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–∞–Ω–∞–ª–∞", show_alert=True)
